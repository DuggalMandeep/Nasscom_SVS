{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth/auth.component.css","webpack:///./src/app/auth/auth.component.html","webpack:///./src/app/auth/auth.component.ts","webpack:///./src/app/challan/challan.component.css","webpack:///./src/app/challan/challan.component.html","webpack:///./src/app/challan/challan.component.ts","webpack:///./src/app/challan1/challan1.component.css","webpack:///./src/app/challan1/challan1.component.html","webpack:///./src/app/challan1/challan1.component.ts","webpack:///./src/app/challan1/tabset-basic.html","webpack:///./src/app/challan1/tabset-basic.ts","webpack:///./src/app/component-form/component-form.component.css","webpack:///./src/app/component-form/component-form.component.html","webpack:///./src/app/component-form/component-form.component.ts","webpack:///./src/app/component-head/component-head.component.css","webpack:///./src/app/component-head/component-head.component.html","webpack:///./src/app/component-head/component-head.component.ts","webpack:///./src/app/footer/footer.component.css","webpack:///./src/app/footer/footer.component.html","webpack:///./src/app/footer/footer.component.ts","webpack:///./src/app/myservices/dataservice.service.ts","webpack:///./src/app/pagenotfound/pagenotfound.component.css","webpack:///./src/app/pagenotfound/pagenotfound.component.html","webpack:///./src/app/pagenotfound/pagenotfound.component.ts","webpack:///./src/app/report/report.component.css","webpack:///./src/app/report/report.component.html","webpack:///./src/app/report/report.component.ts","webpack:///./src/app/signal/signal.component.css","webpack:///./src/app/signal/signal.component.html","webpack:///./src/app/signal/signal.component.ts","webpack:///./src/app/update/update.component.css","webpack:///./src/app/update/update.component.html","webpack:///./src/app/update/update.component.ts","webpack:///./src/app/view/view.component.css","webpack:///./src/app/view/view.component.html","webpack:///./src/app/view/view.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<!-- <app-auth></app-auth> -->\\n <!-- <app-component-form>Loading...</app-component-form> -->\\n\\n <router-outlet>\\n    </router-outlet>\\n<!-- <app-footer></app-footer> -->\"","import { Component, ElementRef,OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n }\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { Routes , RouterModule} from '@angular/router';\nimport { AppComponent } from './app.component';\nimport { ComponentHeadComponent } from './component-head/component-head.component';\nimport { ComponentFormComponent } from './component-form/component-form.component';\nimport { AuthComponent } from './auth/auth.component';\nimport { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\nimport { FooterComponent } from './footer/footer.component';\nimport { UpdateComponent } from './update/update.component';\nimport { PagenotfoundComponent } from './pagenotfound/pagenotfound.component';\nimport { ReportComponent } from './report/report.component';\nimport { ChallanComponent } from './challan/challan.component';\nimport { Challan1Component } from './challan1/challan1.component';\nimport { SignalComponent } from './signal/signal.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { ViewComponent } from './view/view.component';\nimport { NgbdTabsetBasic } from './challan1/tabset-basic';\nimport { HttpClientModule} from '@angular/common/http';\n\nconst appRoutes: Routes =[\n  {\n    path:'',\n    component:AuthComponent\n  },\n  {\n    path:'register',\n    component:ComponentFormComponent\n  },\n  {\n    path:'home',\n    component:ComponentHeadComponent,\n    children: [\n      {\n        path:'',\n        component:ReportComponent\n      },\n      {\n        path:'report',\n        component:ReportComponent\n      },\n      {\n        path:'update',\n        component:UpdateComponent\n      },\n      {\n        path:'signal',\n        component:SignalComponent\n      },\n      {\n        path:'challan',\n        component:Challan1Component, \n      },\n      {\n        path:\"**\",\n        component:PagenotfoundComponent\n      }\n    ]\n  },\n  {\n    path:\"**\",\n    component:PagenotfoundComponent\n  }\n]\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ComponentHeadComponent,\n    ComponentFormComponent,\n    AuthComponent,\n    FooterComponent,\n    UpdateComponent,\n    PagenotfoundComponent,\n    ReportComponent,\n    ChallanComponent,\n    SignalComponent,\n    Challan1Component,\n    ViewComponent,\n    NgbdTabsetBasic\n  ],\n  imports: [\n    BrowserModule,\n    ReactiveFormsModule,\n    FormsModule,\n    NgbModule.forRoot(),\n    HttpClientModule,\n    RouterModule.forRoot(appRoutes)\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n","module.exports = \".myform{\\n    border: 7px inset rgb(156, 7, 7);\\n    padding: 20px;\\n    background-blend-mode: hue;\\n    padding-bottom: 70px;\\n}\\n\\n.body{\\n    background-image: './assets/cs1.jpg';\\npadding-top: 60px;\\n -webkit-backface-visibility: visible;\\n         backface-visibility: visible;\\n \\n  \\n\\t\\n  /* Set up proportionate scaling */\\n  width: 100%;\\n  height: 100%;\\n\\t\\n  /* Set up positioning */\\n  background-position: center;\\n    background-repeat: no-repeat;\\n     background-size: 100% 100%; \\n}\"","module.exports = \"<nav class=\\\"navbar navbar-inverse navbar-fixed-top navbar-expand-sm\\\" style=\\\"min-height: 80px;\\\">\\n    <div class = \\\"navbar-header\\\">\\n      <a href=\\\"#\\\" class=\\\"navbar-brand\\\">\\n        <div id=\\\"trafficlight\\\" >\\n            <span id=\\\"light1\\\"></span>\\n            <span id=\\\"light2\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Signal_Voilation_System</span>\\n            <span id=\\\"light3\\\"></span>\\n          </div></a>\\n    </div>\\n    <button type = \\\"button\\\" (click)=\\\"goto();\\\" class = \\\"button navbar-btn btn btn-lg active navbar-right\\\" style=\\\"margin-right: 10px;\\\">Register</button>\\n</nav>\\n\\n<div class=\\\"body\\\">\\n    <div *ngIf=\\\"this.err\\\"\\n    class=\\\"alert-danger\\\">Invalid UserName or Password! Please Try Again ;)\\n</div>\\n    <div class=\\\"container backCol\\\">\\n      <div class=\\\"row1 row\\\">\\n        <h2 align=\\\"center\\\" class=\\\"vehicle\\\" ><font color=\\\"black\\\">Login Form</font></h2>\\n        <div class=\\\"col-sm-8\\\">\\n          <div class=\\\"col-lg-12 col-lg-offset-3\\\">\\n            <div class=\\\"myform\\\">\\n              \\n              <form #log=\\\"ngForm\\\" (ngSubmit)=\\\"Authenticate(log)\\\">\\n                <fieldset>\\n                  <legend>Login Here</legend>\\n                  <div class=\\\"form-group\\\">\\n                    <label for=\\\"uname\\\" style=\\\"color:rgb(231, 154, 154);\\\">USER NAME</label>\\n                    \\n                    <input type=\\\"text\\\" id=\\\"uname\\\" class=\\\"form-control\\\"  placeholder=\\\"enter user name\\\"\\n                    name=\\\"uname\\\" \\n                    ngModel\\n                    #uname=\\\"ngModel\\\" required\\n                    minlength=\\\"4\\\"\\n                    maxlength=\\\"20\\\"\\n                    pattern=\\\"^[a-zA-Z0-9]{4,12}$\\\"/>\\n                    \\n                    <div *ngIf=\\\"!uname.valid && uname.touched\\\"\\n                                  class=\\\"alert-danger\\\">Invalid Username: It must contain 4-20 alphanuberic characters \\n                          </div>\\n                  </div>\\n\\n\\n\\n                  <div class=\\\"form-group\\\">\\n                    <label for=\\\"pass\\\" style=\\\"color:rgb(231, 154, 154);\\\">PASSWORD</label>\\n                    \\n                    <input type=\\\"password\\\" id=\\\"pass\\\" class=\\\"form-control\\\" placeholder=\\\"enter password\\\" \\n                    name=\\\"pass\\\"\\n                    ngModel\\n                    #pass=\\\"ngModel\\\" required\\n                    pattern=\\\"^(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$\\\"/>\\n                    \\n                    <div *ngIf=\\\"!pass.valid && pass.touched\\\"\\n                                  class=\\\"alert-danger\\\">Invalid Password:It must contain at least 8 characters ,at least 1 uppercase letter, 1 lowercase letter, and 1 number Can contain special characters\\n\\n                              </div>\\n                  \\n                  </div>\\n                </fieldset>\\n                <input type=\\\"submit\\\" [attr.disabled]=\\\"!(uname.valid && pass.valid) ? true : null \\\" class=\\\"btn btn-md active button\\\" value=\\\"Login\\\"/>\\n              </form>\\n\\n            </div>\\n          </div>\\n        </div>\\n      </div>  \\n    </div> \\n  </div>\\n\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { dataservice } from '../myservices/dataservice.service';\n\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.css']\n})\nexport class AuthComponent implements OnInit {\n\n  public err:boolean;\n  constructor(public ds:dataservice,public router:Router){ \n    this.err=false;\n  }\n\n  ngOnInit() {\n  }\n\n\n  goto(){\n    this.router.navigate(['register']);\n  }\n\n\n  Authenticate(log){\n\n    console.log(log.value);\n    this.ds.login(log).subscribe((response)=>{\n        console.log(response);\n        if(response==='abc'){\n          this.err=false;\n          this.router.navigate(['home']);\n        }else{  \n          this.err=true;\n        }\n    });\n\n\n    \n  }\n}\n\n\n\n\n// onAddEmployee(empForm){\n//   this.ds.addEmployee(empForm).subscribe((response)=>{\n//       this.ds.loggingService(response);\n//   });\n// }\n","module.exports = \"\"","module.exports = \"<body>\\n  <div class=\\\"container backCol\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-8\\\">\\n            <div class=\\\"col-lg-22 col-lg-offset-6\\\">\\n\\n\\n                <div class=\\\"myform\\\">\\n                    <form>\\n                      <fieldset>\\n                        <legend>Issue E-Challan</legend>\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"vno\\\"><font color=\\\"brown\\\">VEHICLE NUMBER</font></label>\\n                            <input type=\\\"text\\\" id=\\\"vno\\\" class=\\\"form-control\\\"  placeholder=\\\"enter vehicle number\\\">\\n                          </div>\\n                       \\n                 <div class=\\\"form-group\\\">\\n                              <label for=\\\"offence\\\"><font color=\\\"brown\\\">OFFENCE</font></label>\\n                              <select class=\\\"form-control\\\" id=\\\"offence\\\" default=\\\"none\\\">\\n                                  <option value=\\\"\\\" selected disabled hidden>Choose here</option>\\n\\n                                <option>1</option>\\n                                <option>2</option>\\n                                <option>3</option>\\n                                <option>4</option>\\n                              </select>\\n                            </div>\\n                  \\n                  \\n                        \\n                  <div class=\\\"form-group\\\">\\n                                <label for=\\\"junction\\\"><font color=\\\"brown\\\">JUNCTION</font></label>\\n                                <input type=\\\"text\\\" id=\\\"junction\\\" class=\\\"form-control\\\"  placeholder=\\\"enter junction location\\\">\\n                              </div><br>\\n\\n                                         \\n                  <button type=\\\"submit\\\" class=\\\"btn btn-success navbar-btn-lg form-control\\\">Register</button>\\n                  <br/>\\n                  <input type=\\\"reset\\\" class=\\\"btn btn-danger navbar-btn-lg form-control\\\" style=\\\"margin-top: 10px;\\\"/>\\n\\n                      </fieldset>\\n                    </form>\\n                </div>\\n                &nbsp; &nbsp; \\n\\n\\n\\n            </div>\\n        </div>\\n      </div>\\n  </div>\\n</body>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-challan',\n  templateUrl: './challan.component.html',\n  styleUrls: ['./challan.component.css']\n})\nexport class ChallanComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid container\\\" style=\\\"padding-top: 80px;\\\">\\n  <ngbd-tabset-basic></ngbd-tabset-basic>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-challan1',\n  templateUrl: './challan1.component.html',\n  styleUrls: ['./challan1.component.css']\n})\nexport class Challan1Component implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<ngb-tabset class=\\\"tabset1\\\">\\n\\t<ngb-tab title=\\\"Issue E-Challan\\\">\\n\\t\\t<ng-template ngbTabContent>\\n\\t\\t\\t<app-challan>Loading...</app-challan>\\n\\t\\t</ng-template>\\n\\t</ngb-tab>\\n\\t<ngb-tab title=\\\"View E-Challan\\\">\\n\\t\\t<ng-template ngbTabContent><br/>\\n            <form class=\\\"container\\\" style=\\\"width: 50%;\\\">\\n                    <div class=\\\"form-group\\\">\\n                            <label for=\\\"junction\\\"><font color=\\\"brown\\\">Vehicle Number</font></label>\\n                            <input type=\\\"text\\\" id=\\\"junction\\\" class=\\\"form-control\\\"  placeholder=\\\"enter junction location\\\" >\\n                          </div>\\n\\n                                     \\n              <button type=\\\"submit\\\" class=\\\"btn btn-success navbar-btn-lg form-control\\\" >Submit</button>\\n              <br/>\\n               </form>\\n            <div *ngIf='false'>\\n            <app-view>Loading...</app-view></div>\\n\\t\\t\\t</ng-template>\\n\\t</ngb-tab>\\n</ngb-tabset>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'ngbd-tabset-basic',\n  templateUrl: './tabset-basic.html',\n  styles: [\n    `\n    :host { color: gray;}\n\n    :host ::ng-deep .tabset1 a.nav-link {\n      color: red;\n    }\n    \n    :host ::ng-deep .tabset1 a.nav-link.active {\n        color: green;\n    }\n`\n  ]\n})\nexport class NgbdTabsetBasic { }\n","module.exports = \"\"","module.exports = \" \\n<nav class=\\\"navbar navbar-inverse navbar-fixed-top navbar-expand-sm\\\" style=\\\"min-height: 80px;\\\">\\n  <div class = \\\"navbar-header\\\">\\n    <a href=\\\"#\\\" class=\\\"navbar-brand\\\">\\n      <div id=\\\"trafficlight\\\" >\\n          <span id=\\\"light1\\\"></span>\\n          <span id=\\\"light2\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Signal_Voilation_System</span>\\n          <span id=\\\"light3\\\"></span>\\n        </div></a>\\n  </div>\\n  <button (click)=\\\"goto();\\\" type = \\\"button\\\" class = \\\"button navbar-btn btn btn-lg active navbar-right\\\" style=\\\"margin-right: 10px;\\\">Login</button>\\n  </nav> \\n\\n<div class=\\\"vehicle\\\" style=\\\"padding-top: 80px\\\">Vehicle Registration form</div>\\n\\n<!-- Form Begins here -->\\n\\n<div class=\\\"container\\\">\\n  <form #VehRegiForm=\\\"ngForm\\\" (ngSubmit)=\\\"RegisterVeh(VehRegiForm)\\\" >\\n\\n    <div class=\\\"row1 row\\\">\\n        <span>\\n\\n          <div class=\\\"form-group\\\">\\n            <input id=\\\"vehicle_number\\\" type=\\\"text\\\" placeholder=\\\"Mentioned on Vehicle's Number Plate\\\"class=\\\" gate form-control\\\"\\n            name=\\\"vehicle_number\\\"\\n            ngModel\\n            #vehicle_number=\\\"ngModel\\\" \\n            required\\n            pattern=\\\"^[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}$\\\">\\n            <label for=\\\"vehicle_number\\\">Vehicle Number:</label>\\n          </div>\\n\\n          <div *ngIf=\\\"!vehicle_number.valid && vehicle_number.touched\\\"\\n                                  class=\\\"alert-danger\\\">Invalid Vehicle Number!!\\n                          </div>\\n        </span>\\n\\n\\n        <span>\\n          <div class=\\\"form-group\\\">\\n            <input id=\\\"YOR\\\" type=\\\"date\\\" class=\\\" gate form-control\\\"\\n            name=\\\"YOR\\\"\\n            ngModel\\n            #YOR=\\\"ngModel\\\" \\n            \\n            required>\\n            <label for=\\\"YOR\\\">YearOfRegistration:</label>\\n          </div>\\n          <div *ngIf=\\\"!YOR.valid && YOR.touched\\\"\\n                                  class=\\\"alert-danger\\\">Select Date!!\\n                          </div>\\n          \\n        </span>\\n\\n\\n        <span>\\n          <div class=\\\"form-group\\\">\\n            <input id=\\\"Vmodel\\\" type=\\\"text\\\" placeholder=\\\"Model Of Vehicle\\\"class=\\\" gate form-control\\\"\\n            name=\\\"Vmodel\\\"\\n            ngModel\\n            #Vmodel=\\\"ngModel\\\" \\n            minlength=1\\n            required>\\n            <label for=\\\"Vmodel\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Model:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</label>\\n          </div>\\n\\n          <div *ngIf=\\\"!Vmodel.valid && Vmodel.touched\\\"\\n                                  class=\\\"alert-danger\\\">Model-name must be NonEmpty!!\\n                          </div>\\n        </span>\\n        <span>\\n          <div class=\\\"form-group\\\">\\n              <select class=\\\"gate form-control\\\" id=\\\"Category\\\">\\n                  <option class=\\\"gate\\\" value=\\\"0\\\" [selected]=\\\"true\\\" [disabled]=\\\"true\\\">---------Select---------</option>\\n                  <option value=\\\"2\\\">2 Wheeler</option>\\n                  <option value=\\\"3\\\">3 Wheeler</option>\\n                  <option value=\\\"4\\\">4 Wheeler</option>\\n                  <option value=\\\"6\\\">6 Wheeler</option>\\n              </select>\\n              <label for=\\\"Category\\\">Select Category:</label>\\n          </div>\\n          <!-- <div *ngIf=\\\"Category.value === 0 && Category.touched\\\"\\n                class=\\\"alert-danger\\\">Model-name must be NonEmpty!!\\n            </div> -->\\n\\n        </span>\\n        \\n        <span>\\n            <div class=\\\"form-group\\\">\\n                <select class=\\\"gate form-control \\\" id=\\\"fuel\\\">\\n                    <option>---------Select---------</option>\\n                    <option value=\\\"petrol\\\">Petrol</option>\\n                    <option value=\\\"diesel\\\">Diesel</option>\\n                    <option value=\\\"electric\\\">Electric</option>\\n                </select>\\n                <label for=\\\"fuel\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Fuel:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</label>\\n            </div>\\n        </span>\\n        <span>\\n            <div class=\\\"form-group\\\">\\n              <input id=\\\"color\\\" type=\\\"text\\\" placeholder=\\\"Color of Vehicle\\\" class=\\\" gate form-control\\\"\\n              name=\\\"color\\\"\\n              ngModel\\n              #color=\\\"ngModel\\\"\\n              required>\\n              <label for=\\\"color\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Color:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</label>\\n            </div>\\n\\n            <div *ngIf=\\\"!color.valid && color.touched\\\"\\n                class=\\\"alert-danger\\\">Enter a valid Color!!\\n            </div>\\n        </span>\\n        <span>\\n            <div class=\\\"form-group\\\">\\n              <input id=\\\"ownername\\\" type=\\\"text\\\" placeholder=\\\"OwnerName\\\" class=\\\" gate form-control\\\"\\n              name=\\\"ownername\\\"\\n              ngModel\\n              #ownername=\\\"ngModel\\\"\\n              minlength=\\\"3\\\" required>\\n              <label for=\\\"ownername\\\">&nbsp;&nbsp;&nbsp;OwnerName:&nbsp;&nbsp;&nbsp;</label>\\n            </div>\\n\\n            <div *ngIf=\\\"!ownername.valid && ownername.touched\\\"\\n                class=\\\"alert-danger\\\"> Enter a valid name!!\\n            </div>\\n        </span>\\n        <span>\\n            <div class=\\\"form-group\\\">\\n              <input id=\\\"address\\\" type=\\\"text\\\" placeholder=\\\"Owner Resident Address\\\" class=\\\" gate form-control\\\"\\n              name=\\\"address\\\"\\n              ngModel\\n              #address=\\\"ngModel\\\" required>\\n              <label for=\\\"address\\\">&nbsp;OwnerAddress:&nbsp;</label>\\n            </div>\\n            <div *ngIf=\\\"!address.valid && address.touched\\\"\\n                class=\\\"alert-danger\\\"> Address Not detected!!\\n            </div>\\n        </span>\\n        <span>\\n            <div class=\\\"form-group\\\">\\n              <input id=\\\"dob\\\" type=\\\"date\\\"class=\\\" gate form-control\\\"\\n              name=\\\"dob\\\"\\n              ngModel\\n              #dob=\\\"ngModel\\\" required>\\n              <label for=\\\"dob\\\">&nbsp;Owner D.O.B. :&nbsp;&nbsp;</label>\\n            </div>\\n            <div *ngIf=\\\"!dob.valid && dob.touched\\\"\\n                                  class=\\\"alert-danger\\\">Select Date!!\\n                          </div>\\n        </span>\\n        <span>\\n            <div class=\\\"form-group\\\">\\n              <input id=\\\"city\\\" type=\\\"text\\\" placeholder=\\\"City Of Residence\\\" class=\\\" gate form-control\\\"\\n              name=\\\"city\\\"\\n              ngModel\\n              #city=\\\"ngModel\\\" required>\\n              <label for=\\\"city\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;OwnerCity:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</label>\\n            </div>\\n            <div *ngIf=\\\"!city.valid && city.touched\\\"\\n                                  class=\\\"alert-danger\\\">Enter a valid city name!!\\n                          </div>\\n        </span>\\n        <span>\\n            <div class=\\\"form-group\\\">\\n              <input id=\\\"mobile\\\" type=\\\"text\\\" placeholder=\\\"Your Contact Number!\\\" class=\\\" gate form-control\\\"\\n              name=\\\"mobile\\\"\\n              ngModel\\n              #mobile=\\\"ngModel\\\" required\\n              minlength=\\\"10\\\">\\n              <label for=\\\"mobile\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Phone:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</label>\\n            </div>\\n            <div *ngIf=\\\"!mobile.valid && mobile.touched\\\"\\n                                  class=\\\"alert-danger\\\">Invalid Mobile Number!!\\n                          </div>\\n        </span>\\n        <span>\\n            <div class=\\\"form-group\\\">\\n              <input id=\\\"mail\\\" type=\\\"email\\\" placeholder=\\\"Email Address\\\" class=\\\" gate form-control\\\"\\n              name=\\\"mail\\\"\\n              ngModel\\n              #mail=\\\"ngModel\\\" required>\\n              <label for=\\\"mail\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Email:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</label>\\n            </div>\\n            <div *ngIf=\\\"!mail.valid && mail.touched\\\"\\n                                  class=\\\"alert-danger\\\">Invalid Email Address!!\\n                          </div>\\n        </span>\\n        \\n        <span>\\n            <div class=\\\"form-group\\\">\\n                <select class=\\\"gate form-control \\\" id=\\\"proof\\\">\\n                    <option>---------Select---------</option>\\n                    <option value=\\\"Aadhar\\\">Aadhar</option>\\n                    <option value=\\\"Driving Licence\\\">Driving Licence</option>\\n                    <option value=\\\"PanCard\\\">PanCard</option>\\n                    <option value=\\\"PassPort\\\">PassPort</option>\\n                </select>\\n                <label for=\\\"proof\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Identity Proof:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</label>\\n            </div>\\n        </span>\\n        <span>\\n            <div class=\\\"upload-boton-wrapper\\\">\\n                <button class=\\\"boton\\\">Upload Document file<span class=\\\"glyphicon glyphicon-cloud-upload\\\"></span></button>\\n                <input id=\\\"file\\\" type=\\\"file\\\" name=\\\"file\\\"\\n                ngModel\\n                #file=\\\"ngModel\\\"\\n                required>\\n              </div>\\n              <div *ngIf=\\\"!file.valid && file.touched\\\"\\n                                  class=\\\"alert-danger\\\">Select Document!!\\n                          </div>\\n        </span>\\n        <br/>\\n        <span>\\n          <div class=\\\"form-group\\\">\\n            <input type=\\\"submit\\\" class=\\\"btn btn-lg active button\\\" value=\\\"Register\\\" style=\\\"margin-bottom: 20px;\\\">\\n          </div>\\n        </span> \\n    </div>\\n\\n  </form>\\n</div>\\n\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router'; \nimport { dataservice } from '../myservices/dataservice.service';\n\n@Component({\n  selector: 'app-component-form',\n  templateUrl: './component-form.component.html',\n  styleUrls: ['./component-form.component.css']\n})\nexport class ComponentFormComponent implements OnInit {\n  public err :boolean;\n  constructor(public router : Router,public ds:dataservice) {\n      this.err=false;\n   }\n  ngOnInit() {\n      \n  }\n\n  goto(){\n    this.router.navigate(['/']);\n  }\n  \n\n  RegisterVeh(log){\n    console.log(log.value);\n    this.ds.register(log).subscribe((response)=>{\n        console.log(response);\n        if(response==='Done'){\n          this.router.navigate(['/']);\n        }else{  \n          this.err=true;\n        }\n    });\n \n  }\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-inverse navbar-fixed-top\\\" style=\\\"min-height: 80px;\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class = \\\"navbar-header\\\">\\n        <button (click)=\\\"isCollapsed = !isCollapsed\\\" style=\\\"margin-top: 30px;\\\" type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#bs-example-navbar-collapse-1\\\" aria-expanded=\\\"false\\\">\\n            <span class=\\\"sr-only\\\">Toggle navigation</span>\\n            <span class=\\\"icon-bar\\\"></span>\\n            <span class=\\\"icon-bar\\\"></span>\\n            <span class=\\\"icon-bar\\\"></span>\\n          </button>\\n      <a href=\\\"#\\\" class=\\\"navbar-brand\\\">\\n        <div id=\\\"trafficlight\\\" >\\n            <span id=\\\"light1\\\"></span>\\n            <span id=\\\"light2\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Signal_Voilation_System</span>\\n            <span id=\\\"light3\\\"></span>\\n          </div></a>\\n    </div>\\n\\n    <div class=\\\"navbar-collapse navbar-right\\\" [ngClass]=\\\"{'collapse':!isCollapsed}\\\">\\n      <ul class=\\\"nav navbar-nav\\\" routerLinkActive=\\\"active\\\">\\n        <li class=\\\"active\\\"><a routerLink=\\\"/home\\\">Home<span class=\\\"sr-only\\\">(current)</span></a></li>\\n        <li><a routerLink=\\\"update\\\">Update</a></li>\\n        <li><a routerLink=\\\"challan\\\">E-challan</a></li>\\n        <li><a routerLink=\\\"signal\\\">Signal</a></li>\\n      </ul>\\n    </div>\\n    \\n  </div>\\n</nav> \\n\\n<router-outlet></router-outlet>\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-component-head',\n  templateUrl: './component-head.component.html',\n  styleUrls: ['./component-head.component.css']\n})\nexport class ComponentHeadComponent implements OnInit {\n  \n  constructor() { let isCollapsed = false; }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"\\n<nav class=\\\"navbar navbar-inverse navbar-fixed-bottom navbar-expand-sm\\\" style=\\\"min-height: 40px;\\\">\\n  <a class=\\\"navbar-brand\\\" style=\\\" position: relative; width: 100%;text-align: center;\\\" href=\\\"#\\\"> <h5>CopyRight 2018 &copy; SVS </h5></a>\\n</nav>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\n\n\n//a sservice is  a TS class it is used to contain business logic centrally\n//we can inject service into the components\n@Injectable({\n    providedIn: 'root',\n})\nexport class dataservice{\n\n    constructor(public http:HttpClient){\n    }\n    // public addEmployee(emp){\n    //     return this.http.post(\"http://localhost:8282/MockProject/DemoServlet\",JSON.stringify(emp.value));              //returns observable\n    // }\n\n    // public update(emp){\n    //     return this.http.put(\"http://localhost:8282/MockProject/DemoServlet\",{});\n    // }\n    // public newGet(){\n    //     return this.http.get(\"\");\n    // }\n    // public loggingService(Messsage){\n    //     console.log(Messsage);\n    // }\n    public login(log){\n        return this.http.post(\"login\",JSON.stringify(log.value)); \n    }\n\n    public register(reg){\n        return this.http.post(\"vehicleinsert\",JSON.stringify(reg.value)); \n    }\n}\n","module.exports = \"\"","module.exports = \"<h1 style=\\\"color:darkgreen;padding-top: 100px;\\\">404 Page Not Found</h1>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-pagenotfound',\n  templateUrl: './pagenotfound.component.html',\n  styleUrls: ['./pagenotfound.component.css']\n})\nexport class PagenotfoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<body>\\n  <div class=\\\"container backCol\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-32\\\">\\n          <div class=\\\"col-lg-40 col-lg-offset-3\\\">\\n            \\n            <h2 align=\\\"center\\\"><font color=\\\"black\\\"></font></h2><br>\\n            \\n            <form class=\\\"form-inline\\\" action=\\\"\\\">\\n              <fieldset>\\n\\n              <legend>Report Generator</legend><br>\\n              <div class=\\\"form-group\\\">\\n                  <!--<label for=\\\"sdate\\\"><font color=\\\"\\\">STARTING DATE</font></label>-->\\n\\n                  <label for=\\\"sdate\\\"><font color=\\\"brown\\\">STARTING DATE: </font></label>\\n                  <input type=\\\"date\\\" id=\\\"sdate\\\" class=\\\"form-control\\\"  placeholder=\\\"enter starting date\\\">\\n              </div>\\n              &nbsp; &nbsp; \\n\\n              <div class=\\\"form-group\\\">\\n                  <label for=\\\"edate\\\"><font color=\\\"brown\\\">ENDING DATE: </font></label>\\n                  <input type=\\\"date\\\" id=\\\"edate\\\" class=\\\"form-control\\\"  placeholder=\\\"enter ending date\\\">\\n              </div><br><br>\\n\\n              \\n              <button type=\\\"submit\\\" class=\\\"btn btn-primary form-control\\\">Submit</button>\\n              </fieldset>\\n            </form>\\n            </div>\\n            </div>\\n            </div>\\n            </div>\\n            \\n\\n\\n\\n</body>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-report',\n  templateUrl: './report.component.html',\n  styleUrls: ['./report.component.css']\n})\nexport class ReportComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<body>\\n    <div class=\\\"container\\\">\\n        <div class=\\\"row\\\" style=\\\"margin-bottom: 20px;\\\">\\n          <div class=\\\"col-sm-9\\\">\\n              <div class=\\\"col-lg-32 col-lg-offset-4\\\"><br><br>\\n                  <div class=\\\"myform\\\">\\n                      <form>\\n                        <fieldset>\\n                          <legend>Signal Registration</legend><br>\\n                          <div class=\\\"form-group\\\">\\n                              <label for=\\\"junction\\\"><font color=\\\"brown\\\">JUNCTION</font></label>\\n                              <input type=\\\"text\\\" id=\\\"junction\\\" class=\\\"form-control\\\"  placeholder=\\\"enter junction\\\">\\n                          </div>\\n                          <div class=\\\"form-group\\\">\\n                              <label for=\\\"PS\\\"><font color=\\\"brown\\\">PS CIRCLE</font></label>\\n                              <input type=\\\"text\\\" id=\\\"PS\\\" class=\\\"form-control\\\"  placeholder=\\\"enter PS cirlce\\\">\\n                          </div>\\n                          <div class=\\\"form-group\\\">\\n                              <label for=\\\"city\\\"><font color=\\\"brown\\\">CITY</font></label>\\n                              <input type=\\\"text\\\" id=\\\"city\\\" class=\\\"form-control\\\"  placeholder=\\\"enter city\\\">\\n                          </div>\\n                          <div class=\\\"form-group\\\">\\n                              <label for=\\\"type\\\"><font color=\\\"brown\\\">SIGNAL TYPE</font></label>\\n                              <input type=\\\"text\\\" id=\\\"type\\\" class=\\\"form-control\\\"  placeholder=\\\"enter type of signal\\\">\\n                          </div>\\n                          <div class=\\\"form-group\\\">\\n                              <label for=\\\"oid\\\"><font color=\\\"brown\\\">OFFICER ID</font></label>\\n                              <input type=\\\"text\\\" id=\\\"oid\\\" class=\\\"form-control\\\"  placeholder=\\\"enter ID of officer\\\">\\n                          </div>\\n                          <button type=\\\"submit\\\" class=\\\"btn btn-success navbar-btn-lg form-control\\\">Register</button><br><br>\\n                          <button type=\\\"reset\\\" class=\\\"btn btn-danger navbar-btn-lg form-control\\\">Reset</button>\\n\\n                        </fieldset>\\n                      </form>\\n                  </div>\\n              </div>\\n          </div>\\n        </div>\\n    </div>\\n</body>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-signal',\n  templateUrl: './signal.component.html',\n  styleUrls: ['./signal.component.css']\n})\nexport class SignalComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"vehicle\\\" style=\\\"padding-top: 80px\\\">Update Vehicle</div>\\n\\n\\n<div class=\\\"container\\\">\\n    <form #VehRegiForm=\\\"ngForm\\\" (ngSubmit)=\\\"RegisterVeh(VehRegiForm)\\\" >\\n  \\n      <div class=\\\"row1 row\\\">\\n        \\n        <span>\\n  \\n            <div class=\\\"form-group\\\">\\n              <input id=\\\"vehicle_number\\\" type=\\\"text\\\" placeholder=\\\"Mentioned on Vehicle's Number Plate\\\"class=\\\" gate form-control\\\"\\n              name=\\\"vehicle_number\\\"\\n              ngModel\\n              #vehicle_number=\\\"ngModel\\\" required>\\n              <label for=\\\"vehicle_number\\\">Vehicle Number:</label>\\n            </div>\\n\\n            <div *ngIf=\\\"!vehicle_number.valid && vehicle_number.touched\\\"\\n                                  class=\\\"alert-danger\\\">Invalid Vehicle Number!!\\n                          </div>\\n        </span>\\n            \\n        \\n        <span>\\n          <div class=\\\"form-group\\\">\\n            <input id=\\\"ownername\\\" type=\\\"text\\\" placeholder=\\\"OwnerName\\\" class=\\\" gate form-control\\\"\\n            name=\\\"ownername\\\"\\n            ngModel\\n            #ownername=\\\"ngModel\\\"\\n            minlength=\\\"3\\\" required>\\n            <label for=\\\"ownername\\\">&nbsp;&nbsp;&nbsp;OwnerName:&nbsp;&nbsp;&nbsp;</label>\\n          </div>\\n\\n          <div *ngIf=\\\"!ownername.valid && ownername.touched\\\"\\n              class=\\\"alert-danger\\\"> Enter a valid name!!\\n          </div>\\n      </span>\\n        \\n      <span>\\n        <div class=\\\"form-group\\\">\\n          <input id=\\\"address\\\" type=\\\"text\\\" placeholder=\\\"Owner Resident Address\\\" class=\\\" gate form-control\\\"\\n          name=\\\"address\\\"\\n          ngModel\\n          #address=\\\"ngModel\\\" required>\\n          <label for=\\\"address\\\">&nbsp;OwnerAddress:&nbsp;</label>\\n        </div>\\n        <div *ngIf=\\\"!address.valid && address.touched\\\"\\n            class=\\\"alert-danger\\\"> Address Not detected!!\\n        </div>\\n    </span>\\n        \\n    <span>\\n      <div class=\\\"form-group\\\">\\n        <input id=\\\"dob\\\" type=\\\"date\\\"class=\\\" gate form-control\\\"\\n        name=\\\"dob\\\"\\n        ngModel\\n        #dob=\\\"ngModel\\\" required>\\n        <label for=\\\"dob\\\">&nbsp;Owner D.O.B. :&nbsp;&nbsp;</label>\\n      </div>\\n      <div *ngIf=\\\"!dob.valid && dob.touched\\\"\\n                            class=\\\"alert-danger\\\">Select Date!!\\n                    </div>\\n     </span>\\n\\n     <span>\\n      <div class=\\\"form-group\\\">\\n        <input id=\\\"city\\\" type=\\\"text\\\" placeholder=\\\"City Of Residence\\\" class=\\\" gate form-control\\\"\\n        name=\\\"city\\\"\\n        ngModel\\n        #city=\\\"ngModel\\\" required>\\n        <label for=\\\"city\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;OwnerCity:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</label>\\n      </div>\\n      <div *ngIf=\\\"!city.valid && city.touched\\\"\\n                            class=\\\"alert-danger\\\">Enter a valid city name!!\\n                    </div>\\n      </span>\\n      <span>\\n        <div class=\\\"form-group\\\">\\n          <input id=\\\"mobile\\\" type=\\\"text\\\" placeholder=\\\"Your Contact Number!\\\" class=\\\" gate form-control\\\"\\n          name=\\\"mobile\\\"\\n          ngModel\\n          #mobile=\\\"ngModel\\\" required\\n          minlength=\\\"10\\\">\\n          <label for=\\\"mobile\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Phone:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</label>\\n        </div>\\n        <div *ngIf=\\\"!mobile.valid && mobile.touched\\\"\\n                              class=\\\"alert-danger\\\">Invalid Mobile Number!!\\n                      </div>\\n    </span>\\n    <span>\\n      <div class=\\\"form-group\\\">\\n        <input id=\\\"mail\\\" type=\\\"email\\\" placeholder=\\\"Email Address\\\" class=\\\" gate form-control\\\"\\n        name=\\\"mail\\\"\\n        ngModel\\n        #mail=\\\"ngModel\\\" required>\\n        <label for=\\\"mail\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Email:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</label>\\n      </div>\\n      <div *ngIf=\\\"!mail.valid && mail.touched\\\"\\n                            class=\\\"alert-danger\\\">Invalid Email Address!!\\n                    </div>\\n  </span>\\n  \\n          \\n        <span>\\n              <div class=\\\"form-group\\\">\\n                  <select class=\\\"gate form-control \\\" id=\\\"proof\\\">\\n                      <option>---------Select---------</option>\\n                      <option value=\\\"Aadhar\\\">Aadhar</option>\\n                      <option value=\\\"Driving Licence\\\">Driving Licence</option>\\n                      <option value=\\\"PanCard\\\">PanCard</option>\\n                      <option value=\\\"PassPort\\\">PassPort</option>\\n                  </select>\\n                  <label for=\\\"proof\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Identity Proof:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</label>\\n              </div>\\n          </span>\\n          <span>\\n            <div class=\\\"upload-boton-wrapper\\\">\\n                <button class=\\\"boton\\\">Upload Document file<span class=\\\"glyphicon glyphicon-cloud-upload\\\"></span></button>\\n                <input id=\\\"file\\\" type=\\\"file\\\" name=\\\"file\\\"\\n                ngModel\\n                #file=\\\"ngModel\\\"\\n                required>\\n              </div>\\n              <div *ngIf=\\\"!file.valid && file.touched\\\"\\n                                  class=\\\"alert-danger\\\">Select Document!!\\n                          </div>\\n        </span>\\n          <br/>\\n          <span>\\n            <div class=\\\"form-group\\\">\\n              <input type=\\\"submit\\\" class=\\\"btn btn-lg active button\\\" value=\\\"Register\\\" style=\\\"margin-bottom: 20px;\\\">\\n            </div>\\n          </span> \\n      </div>\\n  \\n    </form>\\n  </div>\\n  \"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-update',\n  templateUrl: './update.component.html',\n  styleUrls: ['./update.component.css']\n})\nexport class UpdateComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".myform{\\r\\n    border: 7px inset rgb(12, 199, 99);\\r\\n    padding: 10px;\\r\\n    background-blend-mode: blue;\\r\\n   \\r\\n}\\r\\n\\r\\n\\r\\n\"","module.exports = \"<body>\\n    <div class=\\\"container back\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-sm-10\\\">\\n              <div class=\\\"col-lg-20 col-lg-offset-2\\\">\\n                  \\n                  <div class=\\\"myform\\\">\\n                      <form>\\n                        <fieldset>\\n                          <legend>E-Challan</legend>\\n                          <p style=\\\"font-size:20px; color:#538b01; font-weight:bold; font-style:italic;\\\">\\n                            Vehicle Number: <span style=\\\"color: black; font-style: bold\\\"> {{ veh_no }}</span></p>\\n                          <p style=\\\"font-size:20px; color:#538b01; font-weight:bold; font-style:italic;\\\">Owner Name: <span style=\\\"color: black; font-style: bold\\\">{{ owner_name }}</span></p>\\n                          <p style=\\\"font-size:20px; color:#538b01; font-weight:bold; font-style:italic;\\\">Serial Number: <span style=\\\"color: black; font-style: bold\\\"> {{ Sno }}</span></p>\\n                          <p style=\\\"font-size:20px; color:#538b01; font-weight:bold; font-style:italic;\\\">Challan ID: <span style=\\\"color: black; font-style: bold\\\"> {{ Challan_id }}</span></p>\\n                          <p style=\\\"font-size:20px; color:#538b01; font-weight:bold; font-style:italic;\\\">Date of offence: <span style=\\\"color: black; font-style: bold\\\">{{ OffenceDate }}</span></p>\\n                          <p style=\\\"font-size:20px; color:#538b01; font-weight:bold; font-style:italic;\\\">Place: <span style=\\\"color: black; font-style: bold\\\">{{ Place }}</span></p>\\n                          <p style=\\\"font-size:20px; color:#538b01; font-weight:bold; font-style:italic;\\\">Traffic PS limits: <span style=\\\"color: black; font-style: bold\\\"> {{trafficPSlimits}}</span></p>\\n                          <p style=\\\"font-size:20px; color:#538b01; font-weight:bold; font-style:italic;\\\">Offence Description: <span style=\\\"color: black; font-style: bold\\\">{{Offence_Desc}}</span></p>\\n                          <p style=\\\"font-size:20px; color:#538b01; font-weight:bold; font-style:italic;\\\">Fine amount: <span style=\\\"color: black; font-style: bold\\\">{{Fine_amt}}</span></p>\\n                          <p style=\\\"font-size:20px; color:#538b01; font-weight:bold; font-style:italic;\\\">User Charges: <span style=\\\"color: black; font-style: bold\\\">{{User_charges}}</span></p>\\n                          <p style=\\\"font-size:20px; color:#538b01; font-weight:bold; font-style:italic;\\\">Total: <span style=\\\"color: black; font-style: bold\\\">{{Total}}</span></p>\\n                          <p style=\\\"font-size:20px; color:#538b01; font-weight:bold; font-style:italic;\\\">Officer Name: <span style=\\\"color: black; font-style: bold\\\"> {{Officer_name}} </span></p>\\n                        </fieldset>\\n                      </form>\\n                  </div>\\n              </div>\\n            </div>\\n        </div>\\n    </div>\\n</body>  \"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-view',\n  templateUrl: './view.component.html',\n  styleUrls: ['./view.component.css']\n})\nexport class ViewComponent implements OnInit {\n  veh_no = \"123\";\n  owner_name = \"\";\n  Sno = \"\";\n  Challan_id = \"\";\n  OffenceDate = \"\";\n  Place = \"\";\n  trafficPSlimits =\"\";\n  Offence_Desc = \"\";\n  Fine_amt = \"\";\n  User_charges = \"\";\n  Total = \"\";\n  Officer_name = \"\";\n\n\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}